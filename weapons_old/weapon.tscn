[gd_scene load_steps=3 format=3 uid="uid://bpj1uriwueypd"]

[ext_resource type="Resource" uid="uid://b8liuu6s451k5" path="res://weapons_old/rifle.tres" id="2_g8rd0"]

[sub_resource type="GDScript" id="GDScript_nn0pg"]
script/source = "@tool

class_name Weapon extends Node2D

const RandomizedAudio = preload(\"res://scenes/randomized_audio.tscn\")
@export var WEAPON : WeaponResource:
	set(value):
		WEAPON = value
		if Engine.is_editor_hint():
			if value == null:
				unload_weapon()
			else:
				load_weapon()

@onready var sprite2D : Sprite2D = $Sprite2D
@onready var randomized_audio : AudioStreamPlayer2D = $RandomizedAudio
@onready var parent : GunUser = get_parent()
#@onready var raycast2D : RayCast2D = $Raycast2D
var fire_timer: float = 1.0 / WEAPON.fire_rate if WEAPON else 0.0

func _ready() -> void:
	load_weapon()
	
func load_weapon() -> void:
	if not WEAPON:
		return
	if not sprite2D: # instantiated by script
		build_tree()

func build_tree() -> void:
	sprite2D = Sprite2D.new()
	add_child(sprite2D)

	sprite2D.texture = WEAPON.texture
	sprite2D.position = WEAPON.position
	sprite2D.rotation = WEAPON.rotation
	sprite2D.scale = WEAPON.scale

	randomized_audio = RandomizedAudio.instantiate()
	add_child(randomized_audio)

	randomized_audio.stream = WEAPON.fire_sound

func unload_weapon() -> void:
	sprite2D.texture = null
	sprite2D.position = Vector2(0,0)
	sprite2D.rotation = 0
	sprite2D.scale = Vector2(1,1)
	

func _process(delta):
	if not Engine.is_editor_hint():
		update_sprite_flip()
		handle_firing(delta)

func update_sprite_flip() -> void:
	var aim_pos = parent.get_aim_position()
	scale.y = -abs(scale.y) if aim_pos.x < global_position.x else abs(scale.y)
	look_at(aim_pos)

func handle_firing(delta: float) -> void:
	fire_timer += delta
	
	match WEAPON.firing_mode:
		WeaponResource.FiringMode.AUTO:
			handle_auto_fire(delta)
		WeaponResource.FiringMode.SEMI_AUTO:
			handle_semi_auto_fire(delta)

func handle_auto_fire(delta: float) -> void:
	if Input.is_action_pressed(\"fire\") and fire_timer >= (1.0 / WEAPON.fire_rate):
		shoot()
		fire_timer = 0

func handle_semi_auto_fire(delta: float) -> void:
	if Input.is_action_just_pressed(\"fire\") and fire_timer >= (1.0 / WEAPON.fire_rate):
		shoot()
		fire_timer = 0

func shoot() -> bool:
	print('fire')
	return true
"

[node name="Weapon" type="Node2D"]
scale = Vector2(0.75, 0.75)
script = SubResource("GDScript_nn0pg")
WEAPON = ExtResource("2_g8rd0")

[node name="Sprite2D" type="Sprite2D" parent="."]

[node name="RayCast2D" type="RayCast2D" parent="."]
